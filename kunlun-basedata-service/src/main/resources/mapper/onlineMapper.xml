<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.kunlun.basedata.dao.IOnlineDao">

    <select id = "getAllOnlineUser" parameterType="java.util.Map" resultType = "OnlineUserModel">
        SELECT
            id, login_name AS loginName, login_ip AS loginIp, login_address AS loginAddress, used_browser AS usedBrowser,
            used_window AS usedWindow, online, login_time AS loginTime, last_time AS lastTime
        FROM t_online_user
        <include refid="queryOnlineCondition" />
        ORDER BY login_time DESC
        OFFSET #{currentPage} LIMIT #{pageSize}
    </select>

    <select id = "getOnlinesCount" parameterType="java.util.Map" resultType = "java.lang.Integer">
        SELECT COUNT(id) FROM t_online_user
        WHERE 1 = 1
        <include refid="queryOnlineCondition" />
    </select>

    <sql id="queryOnlineCondition">
        <if test="loginName != null and loginName != ''">
            AND login_name LIKE CONCAT('%', #{loginName}, '%')
        </if>
        <if test="loginIp != null and loginIp != ''">
            AND login_ip LIKE CONCAT('%', #{loginIp}, '%')
        </if>
        <if test="loginAddress != null and loginAddress != ''">
            AND login_address = #{loginAddress}
        </if>
        <if test="usedBrowser != null and usedBrowser != ''">
            AND used_browser = #{usedBrowser}
        </if>
        <if test="usedWindow != null and usedWindow != ''">
            AND used_window = #{usedWindow}
        </if>
        <if test="online != null and online != ''">
            AND online = #{online}
        </if>
        <if test="loginTime != null and loginTime != ''">
            AND login_time = #{loginTime}
        </if>
    </sql>

    <insert id="addOnlineUser" parameterType="OnlineUserModel">
        INSERT INTO t_online_user
            (id, login_name, login_ip, login_address, used_browser, used_window, online, login_time, last_time)
        VALUES
            (#{id}, #{loginName}, #{loginIp}, #{loginAddress}, #{usedBrowser},
            #{usedWindow}, #{online}, #{loginTime}, #{lastTime})
        ON CONFLICT (login_name) DO
        UPDATE SET
            login_ip = #{loginIp}, login_address = #{loginAddress}, used_browser = #{usedBrowser},
            used_window = #{usedWindow}, online = #{online}, login_time = #{loginTime}
    </insert>

    <update id="updateOnlineUser" parameterType="OnlineUserModel">
        UPDATE t_online_user SET
            online = #{online},
            last_time = #{lastTime},
            access_count = access_count + 1
        WHERE login_name = #{loginName}
    </update>

</mapper>